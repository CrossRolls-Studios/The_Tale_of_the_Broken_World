<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create main menu
scr_get_options();
set_option_start();
image_speed = 0.2;
choise = 1;
screen = 1;
resolution[0, 0] = 800;
resolution[0, 1] = 600;
resolution[1, 0] = 1024;
resolution[1, 1] = 768;
resolution[2, 0] = 1366;
resolution[2, 1] = 768;
resolution[3, 0] = 1440;
resolution[3, 1] = 900;
resolution[4, 0] = 1600;
resolution[4, 1] = 900;
resolution[5, 0] = 1280;
resolution[5, 1] = 1024;
resolution[6, 0] = 1920;
resolution[6, 1] = 1080;
curr = 0;
for(i = 0; i &lt; 7; i++){
    if(resolution[i , 0] == width &amp;&amp; resolution[i , 1] == height){
        curr = i;
    }
}
width = resolution[curr , 0];
height = resolution[curr , 1];
scr_write_options();
set_option_start();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ButtonWidth =  width/8;
var ButtonHeight = 3*height/40;
var ButtX = width/2 - width/16;
var Butt1Y = height/2 - height/6 + height/25+ 3*height/50;
var Butt2Y = height/2 - height/6  + 2*height/25 + 3*height/40 + 2*height/50;
var Butt3Y = height/2 - height/6 + 3*height/25 + 6*height/40 + height/50;
var Butt4Y = height/2 - height/6 + 4*height/25 + 9*height/40;
var OptionX = width/2 + 3*width/64;
if(screen == 1){
    if(mouse_x &gt; ButtX &amp;&amp; mouse_x &lt; (ButtX + ButtonWidth)){
        if(mouse_y &gt; Butt1Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt1Y)){
            choise = 1;
            if(mouse_check_button_pressed(mb_left)){
                screen = 2;
                choise = 1;
            }
        }
        else if(mouse_y &gt; Butt2Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt2Y)){
            choise = 2;
             if(mouse_check_button_pressed(mb_left)){
                screen = 3;
                choise = 1;
            }
        }
        else if(mouse_y &gt; Butt3Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt3Y)){
            choise = 3;
             if(mouse_check_button_pressed(mb_left)){
                screen = 4;
                 choise = 1;
            }
        }
        else if(mouse_y &gt; Butt4Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt4Y)){
            choise = 4;
             if(mouse_check_button_pressed(mb_left)){
                screen = 5;
                choise = 2;
            }
        }
    }
}
else if(screen == 3){
    if(mouse_x &gt; ButtX &amp;&amp; mouse_x &lt; (ButtX + ButtonWidth)){
        if(mouse_y &gt; Butt4Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt4Y)){
            choise = 5;
             if(mouse_check_button_pressed(mb_left)){
                screen = 1;
                choise = 1;
            }
        }
    }
    if(mouse_x &gt; (width/2 - width/10) &amp;&amp; mouse_x &lt; (width/2 + width/10)){
        if(mouse_y &gt; (Butt1Y + 3*ButtonHeight/4) &amp;&amp; mouse_y &lt; (Butt1Y + 5*ButtonHeight/4)){
            choise = 1;
        }
        else if(mouse_y &gt; (Butt1Y + 5*ButtonHeight/4) &amp;&amp; mouse_y &lt; (Butt1Y + 7*ButtonHeight/4)){
            choise = 2;
        }
        else if(mouse_y &gt; (Butt1Y + 7*ButtonHeight/4) &amp;&amp; mouse_y &lt; (Butt1Y + 9*ButtonHeight/4)){
            choise = 3;
        }
        else if(mouse_y &gt; (Butt1Y + 9*ButtonHeight/4) &amp;&amp; mouse_y &lt; (Butt1Y + 11*ButtonHeight/4)){
            choise = 4;
        }
    }
}

else if(screen == 5){
    if(mouse_x &gt; ButtX &amp;&amp; mouse_x &lt; (ButtX + ButtonWidth)){
        if(mouse_y &gt; Butt2Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt2Y)){
        choise = 1;
             if(mouse_check_button_pressed(mb_left)){
                game_end();
            }
        }
        else if(mouse_y &gt; Butt3Y &amp;&amp; mouse_y &lt; (ButtonHeight+Butt3Y)){
        choise = 2;
             if(mouse_check_button_pressed(mb_left)){
                screen = 1;
                 choise = 1;
            }
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched(spr_main_menu, image_index, 0, 0, width, height);
draw_sprite_stretched(spr_main_logo, image_index, (width - width/2)/2, 20, width/2, 0.232*width/2)
var ButtonWidth =  width/8;
var ButtonHeight = 3*height/40;
var ButtX = width/2 - width/16;
var Butt1Y = height/2 - height/6 + height/25+ 3*height/50;
var Butt2Y = height/2 - height/6  + 2*height/25 + 3*height/40 + 2*height/50;
var Butt3Y = height/2 - height/6 + 3*height/25 + 6*height/40 + height/50;
var Butt4Y = height/2 - height/6 + 4*height/25 + 9*height/40;
var OptionX = width/2 + 3*width/64;
if(screen == 1){
    draw_sprite_stretched(spr_main_menu_border,image_index,width/2 - width/10 ,height/2 - height/6,width/5,height/2);
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt1Y, ButtonWidth, ButtonHeight, "Start Game", width); 
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt2Y, ButtonWidth, ButtonHeight, "Options", width); 
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt3Y, ButtonWidth, ButtonHeight, "About", width); 
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt4Y, ButtonWidth, ButtonHeight, "Quit", width); 
    if(choise == 1){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt1Y, ButtonWidth, ButtonHeight, "Start Game", width); 
    }
    else if(choise == 2){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt2Y, ButtonWidth, ButtonHeight, "Options", width); 
    }
    else if(choise == 3){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt3Y, ButtonWidth, ButtonHeight, "About", width); 
    }
    else if(choise == 4){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt4Y, ButtonWidth, ButtonHeight, "Quit", width); 
    }
}
else if(screen == 5){
    draw_sprite_stretched(spr_main_menu_border,image_index,width/2 - width/10 ,height/2 - height/6,width/5,height/2 - ButtonHeight - height/25);
    draw_text( width/2 , Butt1Y, "Are you sure?");
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt2Y, ButtonWidth, ButtonHeight, "Quit Game", width); 
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt3Y, ButtonWidth, ButtonHeight, "Cancel", width); 
    if(choise == 1){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt2Y, ButtonWidth, ButtonHeight, "Quit Game", width); 
    }
    else if(choise == 2){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt3Y, ButtonWidth, ButtonHeight, "Cancel", width); 
    }
}
else if(screen ==3){
    draw_sprite_stretched(spr_main_menu_border,image_index,width/2 - width/8 ,height/2 - height/6,width/4,height/2);
    draw_set_halign(fa_middle);
    draw_set_color(c_black);
    draw_text(width/2 , Butt1Y, "Options");
    if(soundlvl == 100){
            draw_text(OptionX, Butt1Y + ButtonHeight, "&lt;&lt; " + string(soundlvl));
    }
    else if(soundlvl == 0){
        draw_text(OptionX, Butt1Y + ButtonHeight, string(soundlvl) + " &gt;&gt;");
    }
    else{
        draw_text(OptionX, Butt1Y + ButtonHeight, "&lt;&lt; " + string(soundlvl) + " &gt;&gt;");
    }
    if(sound){
        draw_text(OptionX, Butt1Y + 3*ButtonHeight/2, "&lt;&lt; " + "On" );
    }
    else{
        draw_text(OptionX, Butt1Y + 3*ButtonHeight/2, "Off" + " &gt;&gt;");
    }
    if(fullscr){
        draw_text(OptionX, Butt1Y + 5*ButtonHeight/2, "&lt;&lt; " + "On");
    }
    else{
        draw_text(OptionX, Butt1Y + 5*ButtonHeight/2, "Off" + " &gt;&gt;");
    }
    if(curr == 0)
    {
        draw_text(OptionX, Butt1Y + 2* ButtonHeight, string(width) + "x" + string(height) + " &gt;&gt;");
    }
    else if(curr == 6){
        draw_text(OptionX, Butt1Y + 2* ButtonHeight, "&lt;&lt; " + string(width) + "x" + string(height));
    }
    else{
        draw_text(OptionX, Butt1Y + 2* ButtonHeight, "&lt;&lt; " + string(width) + "x" + string(height) + " &gt;&gt;");
    }
    scr_draw_button(c_black, spr_main_menu_button, ButtX, Butt4Y, ButtonWidth, ButtonHeight, "Back", width); 
    draw_set_halign(fa_left);
    draw_text(width/2 - width/10 , Butt1Y + ButtonHeight, "Sound level");
    draw_text(width/2 - width/10 , Butt1Y + 3*ButtonHeight/2, "Sound");
    draw_text(width/2 - width/10 , Butt1Y + 2* ButtonHeight, "Resolution");
    draw_text(width/2 - width/10 , Butt1Y + 5*ButtonHeight/2, "Fullscreen");
    if(choise == 1){
        draw_set_color(c_maroon);
        draw_text(width/2 - width/10 , Butt1Y + ButtonHeight, "Sound level");
        draw_set_halign(fa_middle);
        if(soundlvl == 100){
            draw_text(OptionX, Butt1Y + ButtonHeight, "&lt;&lt; " + string(soundlvl));
        }
        else if(soundlvl == 0){
            draw_text(OptionX, Butt1Y + ButtonHeight, string(soundlvl) + " &gt;&gt;");
        }
        else{
            draw_text(OptionX, Butt1Y + ButtonHeight, "&lt;&lt; " + string(soundlvl) + " &gt;&gt;");
        }
    }
    else if(choise == 2){
        draw_set_color(c_maroon);
        draw_text(width/2 - width/10 , Butt1Y + 3*ButtonHeight/2, "Sound");
        draw_set_halign(fa_middle);
        if(sound){
            draw_text(OptionX, Butt1Y + 3*ButtonHeight/2, "&lt;&lt; " + "On");
        }
        else{
            draw_text(OptionX, Butt1Y + 3*ButtonHeight/2, "Off" + " &gt;&gt;");
        }
    }
    else if(choise == 3){
        draw_set_color(c_maroon);
         draw_text(width/2 - width/10 , Butt1Y + 2* ButtonHeight, "Resolution");
         draw_set_halign(fa_middle);
        if(curr == 0)
        {
            draw_text(OptionX, Butt1Y + 2* ButtonHeight, string(width) + "x" + string(height) + " &gt;&gt;");
        }
        else if(curr == 6){
            draw_text(OptionX, Butt1Y + 2* ButtonHeight, "&lt;&lt; " + string(width) + "x" + string(height));
        }
        else{
            draw_text(OptionX, Butt1Y + 2* ButtonHeight, "&lt;&lt; " + string(width) + "x" + string(height) + " &gt;&gt;");
        }
    }
    else if(choise == 4){
        draw_set_color(c_maroon);
        draw_text(width/2 - width/10 , Butt1Y + 5*ButtonHeight/2, "Fullscreen");
        draw_set_halign(fa_middle);
        if(fullscr){
            draw_text(OptionX, Butt1Y + 5*ButtonHeight/2, "&lt;&lt; " + "On");
        }
        else{
            draw_text(OptionX, Butt1Y + 5*ButtonHeight/2, "Off" + " &gt;&gt;");
        }
    }  
    else if(choise == 5){
        scr_draw_button(c_maroon, spr_main_menu_button_choose, ButtX, Butt4Y, ButtonWidth, ButtonHeight, "Back", width); 
    } 
}
else if(screen == 3){
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(screen == 1){
    if(choise == 4){
        choise = 1;
    }
    else{
        choise++;
    }
}
else if(screen == 5){
    if(choise == 2){
        choise = 1;
    }
    else{
        choise++;
    }
}
else if(screen == 3){
    if(choise == 5){
        choise = 1;
    }
    else{
        choise++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(screen == 3){
    if(choise == 1){
        if(soundlvl &lt; 100){
            soundlvl++;
        }
    }
    else if(choise == 2){
        if(!sound){
            sound = true;
        }
    }
    if(choise == 3){
        if(curr &lt; 6){
            curr++;
            width = resolution[curr , 0];
            height = resolution[curr , 1];
        }
    }
    else if(choise == 4){
        if(!fullscr){
            fullscr = true;
        }
    }
}
scr_write_options();
set_option_start();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(screen == 1){
 if(choise == 1){
        choise = 4;
    }
    else{
        choise--;
    }
 }
 else if(screen == 5){
 if(choise == 1){
        choise = 2;
    }
    else{
        choise--;
    }
 }
 else if(screen == 3){
 if(choise == 1){
        choise = 5;
    }
    else{
        choise--;
    }
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(screen == 3){
    if(choise == 1){
        if(soundlvl &gt; 0){
            soundlvl--;
        }
    }
    else if(choise == 2){
        if(sound){
            sound = false;
        }
    }
    if(choise == 3){
        if(curr &gt; 0){
            curr--;
            width = resolution[curr , 0];
            height = resolution[curr , 1];
        }
    }
    else if(choise == 4){
        if(fullscr){
            fullscr = false;
        }
    }
}
scr_write_options();
set_option_start();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(screen!= 1){
    screen = 1;
    choise = 1;
}
else{
    screen = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(screen == 1){
    if(choise == 1){
        screen = 2;        
    }
    else if(choise == 2){
    choise = 1;
        screen = 3;
    }
    else if(choise == 3){
        screen = 4;        
    }
    else if(choise == 4){
        screen = 5;
        choise = 2;
    }
}
else if(screen == 5){
    if(choise == 1){
        game_end();        
    }
    else if(choise == 2){
        screen = 1;
        choise = 1;
    }
}
else if(screen == 3){
    if(choise == 5){
        screen = 1;
        choise = 1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
